class Reservation
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
	user: User;
	house: Accomodation;
	checkIn: Types`DateTime;
	checkOut: Types`DateTime;
	price: real;
operations
	public Reservation: User * Accomodation * Types`DateTime * Types`DateTime ==> Reservation
	Reservation(u, h, cI, cO) == (
		user := u;
		house := h;
		checkIn := cI;
		checkOut := cO;
		house.addReservation(self);
	);
	-- TODO
		-- Add postconditions
	pure public getUser: () ==> User	
	getUser() == return user;
	
	public getAccomodation: () ==> Accomodation
	getAccomodation() == return house;
	
	public getCheckIn: () ==> Types`DateTime
	getCheckIn() == return checkIn;
		
	public getCheckOut: () ==> Types`DateTime
	getCheckOut() == return checkOut;
	
	public getPrice: () ==> nat
	getPrice() == return price;
	
	public setPrice: real ==> ()
	setPrice(p) == price := p;
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Reservation