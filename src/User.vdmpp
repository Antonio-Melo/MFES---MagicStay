class User is subclass of Account
instance variables
	--Default
	country: seq of char;
	company: seq of char;
	companyRegNum: nat;
	vat: nat;
	
	--Others
	favorites: set of Accomodation := {};
	
	--Inv
	inv companyRegNum >= 0;
	inv vat >= 0;
	
operations
	public User: seq of char * seq of char * seq of char * seq of char * seq of char *seq of char * seq of char * int * int * real ==> User
	User(fName, name, em, pw, count, phNum, cp, cpRegNum, v, initWallet) == (
		firstName := fName;
		fullName := name;
		email := em;
		password := pw;
		country := count;
		phoneNumber := phNum;
		company := cp;
		companyRegNum := cpRegNum;
		vat := v;
		wallet := initWallet;
	);
	--TODO
	 --Add post conditions
	
	public getCountry: () ==> seq of char
	getCountry() == return country;
		
	public getCompany: () ==> seq of char 
	getCompany() == return company;
		
	public getCompanyRegNum: () ==> nat
	getCompanyRegNum() == return companyRegNum;
		
	public getVat: () ==> nat
	getVat() == return vat;
	
	public getFavorites: () ==> set of Accomodation 
	getFavorites() == return favorites;	
	
	public addFavorite: Accomodation ==> ()	
	addFavorite(h) == favorites := favorites union {h}
	pre h not in set favorites;
	
	public addFavorites: set of Accomodation ==> ()
	addFavorites(acc) == (
		for all a in set acc do (
			favorites := favorites union {a};
		);
	);
	
	public removeFavorite: Accomodation ==> ()
	removeFavorite(h) == favorites := favorites \ {h}
	pre h in set favorites;
	
	public getUserType: () ==> seq of char
	getUserType() == return "User";
end User